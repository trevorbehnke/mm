import React, { Component } from "react";
import "./App.css";
import Chart from "./Chart";
import MyForm from "./Form.component";

class App extends Component {
  constructor() {
    super();
    this.state = {
      chartData: {},
    };
  }

  componentWillMount() {
    this.getChartData();
  }

  getChartData() {
    // Ajax calls here
    this.setState({
      chartData: {
        labels: [
          "Birth",
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          "Death",
        ],
        datasets: [
          {
            label: "Population",
            data: [
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
            ],
            backgroundColor: [
              "hsl(0, 100%, 50%)",
              "hsl(3, 100%, 50%)",
              "hsl(6, 100%, 50%)",
              "hsl(9, 100%, 50%)",
              "hsl(12, 100%, 50%)",
              "hsl(15, 100%, 50%)",
              "hsl(18, 100%, 50%)",
              "hsl(21, 100%, 50%)",
              "hsl(24, 100%, 50%)",
              "hsl(27, 100%, 50%)",
              "hsl(30, 100%, 50%)",
              "hsl(33, 100%, 50%)",
              "hsl(36, 100%, 50%)",
              "hsl(39, 100%, 50%)",
              "hsl(42, 100%, 50%)",
              "hsl(45, 100%, 50%)",
              "hsl(48, 100%, 50%)",
              "hsl(51, 100%, 50%)",
              "hsl(54, 100%, 50%)",
              "hsl(57, 100%, 50%)",
              "hsl(60, 100%, 50%)",
              "hsl(63, 100%, 50%)",
              "hsl(66, 100%, 50%)",
              "hsl(69, 100%, 50%)",
              "hsl(72, 100%, 50%)",
              "hsl(75, 100%, 50%)",
              "hsl(78, 100%, 50%)",
              "hsl(81, 100%, 50%)",
              "hsl(84, 100%, 50%)",
              "hsl(87, 100%, 50%)",
              "hsl(90, 100%, 50%)",
              "hsl(93, 100%, 50%)",
              "hsl(96, 100%, 50%)",
              "hsl(99, 100%, 50%)",
              "hsl(102, 100%, 50%)",
              "hsl(105, 100%, 50%)",
              "hsl(108, 100%, 50%)",
              "hsl(111, 100%, 50%)",
              "hsl(114, 100%, 50%)",
              "hsl(117, 100%, 50%)",
              "hsl(120, 100%, 50%)",
              "hsl(123, 100%, 50%)",
              "hsl(126, 100%, 50%)",
              "hsl(129, 100%, 50%)",
              "hsl(132, 100%, 50%)",
              "hsl(135, 100%, 50%)",
              "hsl(138, 100%, 50%)",
              "hsl(141, 100%, 50%)",
              "hsl(144, 100%, 50%)",
              "hsl(147, 100%, 50%)",
              "hsl(150, 100%, 50%)",
              "hsl(153, 100%, 50%)",
              "hsl(156, 100%, 50%)",
              "hsl(159, 100%, 50%)",
              "hsl(162, 100%, 50%)",
              "hsl(165, 100%, 50%)",
              "hsl(168, 100%, 50%)",
              "hsl(171, 100%, 50%)",
              "hsl(174, 100%, 50%)",
              "hsl(177, 100%, 50%)",
              "hsl(180, 100%, 50%)",
              "hsl(183, 100%, 50%)",
              "hsl(186, 100%, 50%)",
              "hsl(189, 100%, 50%)",
              "hsl(192, 100%, 50%)",
              "hsl(195, 100%, 50%)",
              "hsl(198, 100%, 50%)",
              "hsl(201, 100%, 50%)",
              "hsl(204, 100%, 50%)",
              "hsl(207, 100%, 50%)",
              "hsl(210, 100%, 50%)",
              "hsl(213, 100%, 50%)",
              "hsl(216, 100%, 50%)",
              "hsl(219, 100%, 50%)",
              "hsl(222, 100%, 50%)",
              "hsl(225, 100%, 50%)",
              "hsl(228, 100%, 50%)",
              "hsl(231, 100%, 50%)",
              "hsl(234, 100%, 50%)",
              "hsl(237, 100%, 50%)",
              "hsl(240, 100%, 50%)",
              "hsl(243, 100%, 50%)",
              "hsl(246, 100%, 50%)",
              "hsl(249, 100%, 50%)",
              "hsl(252, 100%, 50%)",
              "hsl(255, 100%, 50%)",
              "hsl(258, 100%, 50%)",
              "hsl(261, 100%, 50%)",
              "hsl(264, 100%, 50%)",
              "hsl(267, 100%, 50%)",
              "hsl(270, 100%, 50%)",
              "hsl(273, 100%, 50%)",
              "hsl(276, 100%, 50%)",
              "hsl(279, 100%, 50%)",
              "hsl(282, 100%, 50%)",
              "hsl(285, 100%, 50%)",
              "hsl(288, 100%, 50%)",
              "hsl(291, 100%, 50%)",
              "hsl(294, 100%, 50%)",
              "hsl(297, 100%, 50%)",
              "hsl(300, 100%, 50%)",
              "hsl(303, 100%, 50%)",
              "hsl(306, 100%, 50%)",
              "hsl(309, 100%, 50%)",
              "hsl(312, 100%, 50%)",
              "hsl(315, 100%, 50%)",
              "hsl(318, 100%, 50%)",
              "hsl(321, 100%, 50%)",
              "hsl(324, 100%, 50%)",
              "hsl(327, 100%, 50%)",
              "hsl(330, 100%, 50%)",
              "hsl(333, 100%, 50%)",
              "hsl(336, 100%, 50%)",
              "hsl(339, 100%, 50%)",
              "hsl(342, 100%, 50%)",
              "hsl(345, 100%, 50%)",
              "hsl(348, 100%, 50%)",
              "hsl(351, 100%, 50%)",
              "hsl(354, 100%, 50%)",
              "hsl(357, 100%, 50%)",
              "hsl(360, 100%, 50%)",
            ],
            // borderWidth: 0,
            // borderColor: "white",
            hoverBackgroundColor: "black",
            // hoverBorderColor: "white",
            // hoverBorderWidth: 1,
          },
        ],
      },
    });
  }

  render() {
    return (
      <div className="App">
        <MyForm />
        <Chart chartData={this.state.chartData} />
      </div>
    );
  }
}

export default App;
